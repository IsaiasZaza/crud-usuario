// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = "mysql://cetmae49_Admin:FjpWfMwpUajj@108.167.169.35:3306/cetmae49_cetmaBanco"
  shadowDatabaseUrl = "mysql://cetmae49_Admin:FjpWfMwpUajj@108.167.169.35:3306/cetmae49_shadow_database"
}

enum Role {
  ADMIN
  PROFESSOR
  ALUNO
}

model User {
  id             String     @id @default(uuid())
  nome           String
  email          String     @unique
  senha          String
  role           Role       @default(ALUNO)
  estado         String     @default("Brasília-DF")
  sobre          String     @default("Bem-vindo(a) à Cetma")
  profilePicture String?
  createdAt      DateTime   @default(now())
  cpf            String     @unique
  profissao      String
  purchases      Purchase[]
  courses        Course[]   @relation("UserCourses")
}

model Course {
  id                 String     @id @default(uuid())
  title              String
  subtitle           String?
  description        String
  overview           String?
  material           String?
  price              Float
  videoUrl           String?
  coverImage         String?
  type               CourseType @default(ONLINE)
  location           String?
  durationHours      Float?
  periodoCurso       String?
  schedule           String?
  audience           String?
  instructorName     String?
  instructorTitle    String?
  instructorCRM      String?
  instructorRQE      String?
  organizerName      String?
  organizerFullName  String?
  organizerInstagram String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  purchases          Purchase[]
  users              User[]     @relation("UserCourses")
  parentCourseId     String?
  parentCourse       Course?    @relation("SubCourses", fields: [parentCourseId], references: [id])
  subCourses         Course[]   @relation("SubCourses")
}

enum CourseType {
  ONLINE
  PRESENTIAL
}

model Purchase {
  id              String   @id @default(uuid())
  userId          String
  courseId        String
  status          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  transactionId   String?
  metodoPagamento String?

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])
}

model Ebook {
  id          String   @id @default(uuid())
  title       String
  description String
  autor       String
  fileUrl     String
  price       String?
  imageEbook  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
